package com.rentstore.model;

// Generated 11/07/2013 17:45:57 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Locacao generated by hbm2java
 */
@Entity
@Table(name = "locacao", catalog = "concessionaria")
public class Locacao implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6324263744675818758L;
	private Integer idlocacao;
	private Tipolocacao tipolocacao;
	private Motorista motorista;
	private Funcionario funcionario;
	private Veiculo veiculo;
	private Pagamento pagamento;
	private Cliente cliente;
	private Date datalocacao;
	private Date datadevolucao;
	private Set<Manutencao> manutencaos = new HashSet<Manutencao>(0);

	public Locacao() {
	}

	public Locacao(Tipolocacao tipolocacao, Motorista motorista,
			Funcionario funcionario, Veiculo veiculo, Pagamento pagamento,
			Cliente cliente) {
		this.tipolocacao = tipolocacao;
		this.motorista = motorista;
		this.funcionario = funcionario;
		this.veiculo = veiculo;
		this.pagamento = pagamento;
		this.cliente = cliente;
	}

	public Locacao(Tipolocacao tipolocacao, Motorista motorista,
			Funcionario funcionario, Veiculo veiculo, Pagamento pagamento,
			Cliente cliente, Date datalocacao, Date datadevolucao,
			Set<Manutencao> manutencaos) {
		this.tipolocacao = tipolocacao;
		this.motorista = motorista;
		this.funcionario = funcionario;
		this.veiculo = veiculo;
		this.pagamento = pagamento;
		this.cliente = cliente;
		this.datalocacao = datalocacao;
		this.datadevolucao = datadevolucao;
		this.manutencaos = manutencaos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idlocacao", unique = true, nullable = false)
	public Integer getIdlocacao() {
		return this.idlocacao;
	}

	public void setIdlocacao(Integer idlocacao) {
		this.idlocacao = idlocacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idtipolocacao", nullable = false)
	public Tipolocacao getTipolocacao() {
		return this.tipolocacao;
	}

	public void setTipolocacao(Tipolocacao tipolocacao) {
		this.tipolocacao = tipolocacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idmotorista", nullable = false)
	public Motorista getMotorista() {
		return this.motorista;
	}

	public void setMotorista(Motorista motorista) {
		this.motorista = motorista;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idfuncionario", nullable = false)
	public Funcionario getFuncionario() {
		return this.funcionario;
	}

	public void setFuncionario(Funcionario funcionario) {
		this.funcionario = funcionario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idveiculo", nullable = false)
	public Veiculo getVeiculo() {
		return this.veiculo;
	}

	public void setVeiculo(Veiculo veiculo) {
		this.veiculo = veiculo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpagamento", nullable = false)
	public Pagamento getPagamento() {
		return this.pagamento;
	}

	public void setPagamento(Pagamento pagamento) {
		this.pagamento = pagamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcliente", nullable = false)
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datalocacao", length = 10)
	public Date getDatalocacao() {
		return this.datalocacao;
	}

	public void setDatalocacao(Date datalocacao) {
		this.datalocacao = datalocacao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datadevolucao", length = 10)
	public Date getDatadevolucao() {
		return this.datadevolucao;
	}

	public void setDatadevolucao(Date datadevolucao) {
		this.datadevolucao = datadevolucao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "locacao")
	public Set<Manutencao> getManutencaos() {
		return this.manutencaos;
	}

	public void setManutencaos(Set<Manutencao> manutencaos) {
		this.manutencaos = manutencaos;
	}

}
